generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model User {
  id        String       @id @default(cuid()) @map("_id")
  name      String
  email     String    @unique
  phone     String?    @unique
   token     String?  @unique
  password  String
  startedAt DateTime
  salary    Float
  status    String    
  role      Role      @default(EMPLOYEE)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  salaries  Salary[]
}


enum Role {
  ADMIN
  EMPLOYEE
}


model Customer {
  id        String       @id @default(cuid()) @map("_id")
  name      String
  email     String? 
  phone     String?  
  address   String?  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Product {
  id          String     @id @default(cuid()) @map("_id")
  title       String?
  price       Float      @default(0)
  image       String?
  category    Category   @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  String
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  orders      Order?     @relation(fields: [orderId], references: [id], onDelete: SetNull)
  orderId     String?
  quantity    String?
  Cart        Cart[]    
}

model Category {
id        String       @id @default(cuid()) @map("_id")
  name      String?
  image       String?  
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}
model Cart {
  id         String     @id @default(cuid()) @map("_id")
  userId     String
  productId  String
  quantity   Int        @default(1)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  product    Product    @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Salary {
  id        String   @id @default(cuid()) @map("_id")
  employee   User  @relation(fields: [employeeId], references: [id])
  employeeId  String
  paymentDate      DateTime @default(now())
  month            Int
  year             Int
  amount           Float
}
model Order {
id        String       @id @default(cuid()) @map("_id")
  firstName String?
  lastName  String?
  cityTown  String?
  number    String?
  email     String?
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}


